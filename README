安装thrift-0.8.0
1、http://archive.apache.org/dist/thrift/0.8.0/thrift-0.8.0.tar.gz
2、./configure --prefix=/opt/thrift-0.8.0 --without-ruby --without-php --without-python
3、make && make install
4、/opt/thrift-0.8.0/bin/thrift --gen erl *.thrift
5、默认生成/usr/local/lib/erlang/lib/thrift-0.8.0，在使用erlang.mk时， LOCAL_DEPS = thrift 打包thrift库

bin/thrift --gen erl *.thrift

use erlang.mk:
PROJECT = test
PROJECT_DESCRIPTION = New project
PROJECT_VERSION = 0.1.0
DEPS = thrift jsx
dep_thrift = git https://github.com/good-leaf/ethrift.git master
dep_jsx = git https://github.com/talentdeficit/jsx.git v0.9.0
include erlang.mk

Thrift Erlang Software Library

License
=======

Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.

Example
=======

Example session using thrift_client:

1> {ok, C0} = thrift_client_util:new("localhost", 9090, thriftTest_thrift, []), ok.
ok
2> {C1, R1} = thrift_client:call(C0, testVoid, []), R1.
{ok,ok}
3> {C2, R2} = thrift_client:call(C1, testVoid, [asdf]), R2.
{error,{bad_args,testVoid,[asdf]}}
4> {C3, R3} = thrift_client:call(C2, testI32, [123]), R3.
{ok,123}
5> {C4, R4} = thrift_client:call(C3, testOneway, [1]), R4.
{ok,ok}
6> {C5, R5} = thrift_client:call(C4, testXception, ["foo"]), R5.
{error,{no_function,testXception}}
7> {C6, R6} = thrift_client:call(C5, testException, ["foo"]), R6.
{ok,ok}
8> {C7, R7} = (catch thrift_client:call(C6, testException, ["Xception"])), R7.
{exception,{xception,1001,<<"Xception">>}}

Notes
=====
To use the JSON protocol client, you will need jsx.  This will be pulled in
via rebar for building but not automatically installed by make install.

